automation:
  - id: 'stop pump at target temp'
    alias: SPA-stoppa pump vid rätt temperatur
    description: Stoppar pumpen när rätt temp nås
    trigger:
    - platform: template
      value_template: '{{ (states("sensor.spa_target_temperature")|int == states("sensor.spa_temperature")|int)
        }}'
    condition:
    - condition: state
      entity_id: switch.spa_heat_regulation
      state: 'on'
    action:
    - service: switch.turn_off
      target:
        entity_id: switch.spa_pump
    mode: single
  - id: 'start heater at target temp-3'
    alias: SPA-Starta värme vid gränsvärde
    description: ''
    trigger:
    - platform: template
      value_template: '{{ (states("sensor.spa_target_temperature")|int - states("sensor.spa_temperature")|int)
        > 2 }}'
    condition: []
    action:
    - service: switch.turn_on
      target:
        entity_id: switch.spa_heat_regulation
    mode: single
  - id: spatargetfromspa
    alias: Spa target (from spa)
    description: ''
    trigger:
    - platform: state
      entity_id: sensor.spa_target_temperature
    condition: []
    action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.spa_target_update_lock
    - service: input_number.set_value
      data:
        entity_id: input_number.spa_target_temp
        value: '{{states(''sensor.spa_target_temperature'')}}'
    - service: input_boolean.turn_off
      entity_id: input_boolean.spa_target_update_lock
    mode: single
  - id: spatargettospa
    alias: Spa target (to spa)
    description: ''
    trigger:
    - platform: state
      entity_id: input_number.spa_target_temp
    condition:
    - condition: state
      entity_id: input_boolean.spa_target_update_lock
      state: 'off'
    action:
    - service: mqtt.publish
      data:
        topic: layzspa/command
        payload_template: '{CMD:0,VALUE:{{states(''input_number.spa_target_temp'')|int}},XTIME:0,INTERVAL:0}'
    mode: single
